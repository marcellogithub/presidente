<?php  include "_funzionidbmm.incl";// funzione fratelli // per epag// restituisce un array di fratelli // ordinati secondo il loro campo ordinante (in questo momento IDoggetto)function fratelli($IDoggetto)	{	$dbmFRATELLI = dbmmopen("dati/EPAG","r");		$indagato=unserialize(dbmmfetch($dbmFRATELLI, $IDoggetto));				// trovo fratelli di $indagato		$ullo=dbmmfirstkey($dbmFRATELLI);		while($ullo!=""):			$forsefratello=unserialize(dbmmfetch($dbmFRATELLI, $ullo));					if($forsefratello[IDgenitore]==$indagato[IDgenitore] && $indagato[IDgenitore]!=""):				$valoreordinante=$forsefratello[IDoggetto];				$listafratelli[$valoreordinante]= "$forsefratello[IDoggetto]";			endif;			$ullo=dbmmnextkey($dbmFRATELLI,$ullo);		endwhile;	dbmmclose($dbmFRATELLI);		return($listafratelli);	}// funzione figli // per epag// restituisce un array di figli // ordinati secondo il loro campo ordinante (in questo momento IDoggetto)function figli($IDoggetto)	{	if($IDoggetto==""): $IDoggetto="0"; endif;	$dbmFIGLI = dbmmopen("dati/EPAG","r");		$ullo=dbmmfirstkey($dbmFIGLI);		while($ullo!=""):			$forsefiglio=unserialize(dbmmfetch($dbmFIGLI, $ullo));			if($forsefiglio[IDgenitore]==""): $forsefiglio[IDgenitore]="0"; endif;			if($forsefiglio[IDgenitore]==$IDoggetto):				$valoreordinante=$forsefiglio[IDoggetto];				$listafigli[$valoreordinante]= "$forsefiglio[IDoggetto]";			endif;			$ullo=dbmmnextkey($dbmFIGLI,$ullo);		endwhile;	dbmmclose($dbmFIGLI);		return($listafigli);	}// funzione VEDO array  --------------------------------------------------------------------function vedo($array_inviato, $colore_sfondo="cccccc")	{	if(is_array($array_inviato)):		echo "<blockquote>";		echo "<table bgcolor=$colore_sfondo>";		echo "<tr><td>VEDO ARRAY</td><td></td></tr><br>";		while ( list( $key, $val ) = each( $array_inviato ) ):			echo "<tr><td>$key</td><td>$val</td></tr>";		endwhile;		echo "</table>";		echo "</blockquote>";	else:		echo "<blockquote>";		echo "<table bgcolor=$colore_sfondo>";		echo "<tr><td>valore singolo: </td><td>$array_inviato</td></tr><br>";		echo "</table>";		echo "</blockquote>";	endif;		}// FUNZIONE HTML - MANDA IL MESSAGGIO E LA PAGINA function html($contenuto, $messaggio)	{	global $gs;	global $ln;	global $s;	global $mod;	global $navi_template;	global $logo;	global $IDoggetto;	global $PHP_SELF;	global $colonna_destra;	global $IDpartita;		srand((double)microtime()*1000000);	$caso = md5(uniqid(rand()));	$casocorto=substr($caso, 5, 5);		if($mod==""):		include "_navigazione.incl";		include "htm_header.php";		include "htm_sopra.php";		include "htm_centro.php";		include "htm_sotto.php";	else:		include "_navigazione.incl";		$path="templates/".$mod."/default.incl";		include "$path";	endif;	exit;	}     	$contenuto="";	$messaggio="";	srand((double)microtime()*1000000);$caso = md5(uniqid(rand()));$casocorto=substr($caso, 5, 5);// PRENDO I DATI SESSION =================== ================== ==================// inizializzo una SESSION se non non c'e' una session attiva ------------// forse si può semplificare questo numero e renderlo più significativo usando un timestamp// attenzione se possono esserci accessi nello stesso secondo//if(!$s):  if($s==""):  	$s = md5(uniqid(rand()));	$carrello[fintouno]="0"; //per non avere errori quando $carrello é sotto le due righe	$carrello[fintodue]="0";	$sess[carrello]=serialize($carrello);	$dbm = dbmmopen("dati/SESS","w");		dbmmreplace($dbm, $s, serialize($sess));  	dbmmclose($dbm);endif;// PRENDO I DATI di questa session -----------------------------------$dbm = dbmmopen("dati/SESS","r");	$sess=unserialize(dbmmfetch($dbm,$s));	$carrello=unserialize($sess[carrello]);	dbmmreplace($dbm, $s, serialize($sess));  dbmmclose($dbm);//INIZIALIZZO LINGUA -----------------------------------------------if($ln==""): $ln = "ita";  endif; //se non non c'e' lingua metto italiano // PRENDO I DATI SITO =================== ================== ==================$dbm = dbmmopen("dati/IDEK","r");	$idek=unserialize(dbmmfetch($dbm,"1"));dbmmclose($dbm);$dbm = dbmmopen("dati/STIL","r");	$stil=unserialize(dbmmfetch($dbm,$idek[STILESITO]));		dbmmclose($dbm);// AGGIORNO CARRELLO SINGOLO OGGETTO =============== ========= ==================if($metti!=""): 	$carrello[$IDoggetto]++; // per default aggiungo un oggetto	if($metti=="no"): // se sta togliendo tolgo tutta la riga dall'array		$carrello[$IDoggetto]=""; // mettendo zero toglie la riga dall'array	endif;	$sess[carrello]=serialize($carrello);	$dbm = dbmmopen("dati/SESS","w");		dbmmreplace($dbm, $s, serialize($sess));  	dbmmclose($dbm);endif;/* togliere tutto sotto// VEDO CONTENUTO DI CARRELLO  --------------------------------------------------------------------		while ( list( $key, $val ) = each( $carrello ) ):			echo "$key -$val <br>";		endwhile;		echo "<hr>";*/// ACCESSO =========== ================== ================== ==================// arriva $s la sessione dell'utente// arriva $ps la lettera di permesso della pagina (se c'é)// arriva $pgs la lettera di permesso di scrittura della pagina (se c'é)// usa SESS.db // STABILISCO CHE TIPO DI ACCESSO CHIEDE ---------------------------$permesso_chiesto=$ps; // default: accesso per letturaif($tgs!=""): // chiede accesso per modifica	$permesso_chiesto=$pgs;endif;// PAGINE ACCESSO LIMITATO ----------------------------------------if($permesso_chiesto!=""): // se la pagina richede dei permessi	// VERIFICO timestamp -------------------------------------------	$time=time();	if( $time-$sess[time]>600 && $ac!="controllapirp"): // se non apre una pagina da dieci minuti		$messaggio="<span class='titolo'>Il tempo di connessione e' scaduto, autenticati nuovamente.</span><br>";	else: // aggiorno timestamp		$sess[time]=$time;		$dbm = dbmmopen("dati/SESS","w");			dbmmreplace($dbm, $s, serialize($sess));  		dbmmclose($dbm);	endif;	// VERIFICO permessi per $s ---------------------------------------	if( !ermeg($permesso_chiesto, $sess[permessi]) && $ac!="controllapirp" ): // verifica che ci sia la lettera tra i permessi dell'utente		$messaggio="<span class='titolo'>Bisogna verificare i tuoi privilegi di accesso</span><br>";	endif;		// AUTENTICAZIONE ---------------------------------------------	if($messaggio!="" || $ac!=""): // non ha passato qualche controllo, oppure sto verificando la password	// ho chiamato luk la login e pirp la password per evitare che siano banalmente intercettate nella query string		// SE ARRIVA SENZA PASSWORD, CHIEDE  PASSWORD ---------------		if($pirp=="" && $luk==""):				$contenuto.="				<blockquote>				<table border=0>				<span class='titolo'>Verifica privilegi di accesso</span><br><br>				<form ENCTYPE='multipart/form-data' action='$PHP_SELF?$QUERY_STRING' method='POST'>				<tr><td  align=right> 				<span class='testo'><b>Login</b></span></td>				<td  align=left><input NAME='luk' value='' TYPE=Text SIZE='40' MAXLENGTH='40'>				</td></tr>				<tr><td  align=right> 				<span class='testo'><b>Password</b></span></td>				<td  align=left><input NAME='pirp' value='' TYPE=password SIZE='40' MAXLENGTH='40'>				</td></tr>				<tr><td  align=left>&nbsp;</td>				<td  align=right><input NAME='ac' TYPE=Hidden VALUE='controllapirp'>				<input type='hidden' name='s' value='$s'>				<input type='hidden' name='tgs' value='1'>				<input type='submit' value=' Invia '>				</form>				</td></tr></table>				</blockquote>				";				html($contenuto, $messaggio);		endif;					// CONTROLLA E RICHIEDE PASSWORD ---------------------------		if($ac=="controllapirp"):			// PRENDO I DATI di questo utente ----------------------------			$valido=0;			$dbm = dbmmopen("dati/UTEN","r");			$getkey=dbmmfirstkey($dbm);			while(trim($getkey)!="")			{				unset($uten);				$uten=unserialize(dbmmfetch($dbm,$getkey));								if($luk!=$uten[login] || $pirp!=$uten[password])				{					$valido=0;					$getkey=dbmmnextkey($dbm,$getkey);				}				else				{					$valido=1;					break;				}			}			if ($valido==0)			{				$tgs=""; // così non carica l'uscita dal pannello				$contenuto.="						<blockquote>					<span class='titolo'>Password sbagliata</span>					<br><br>					<span class='testo'>La password <i>$pirp</i> non corrisponde a <i>$kruk</i><br>					Riprova.<br><br></span>									<table border=0>					<span class='titolo'>Verifica privilegi di accesso</span><br><br>					<form ENCTYPE='multipart/form-data' action='$PHP_SELF?$QUERY_STRING' method='POST'>					<tr><td  align=right> 					<span class='testo'><b>Login</b></span></td>					<td  align=left><input NAME='kruk' value='$kruk' TYPE=Text SIZE='40' MAXLENGTH='40'>					</td></tr>					<tr><td  align=right> 					<span class='testo'><b>Password</b></span></td>					<td  align=left><input NAME='pirp' value='' TYPE=password SIZE='40' MAXLENGTH='40'>					</td></tr>					<tr><td  align=left>&nbsp;</td>					<td  align=right>					<input NAME='ac' TYPE=Hidden VALUE='controllapirp'>					<input type='hidden' name='s' value='$s'>					<input type='hidden' name='tgs' value='1'>					<input type='submit' value=' Invia '>					</form>					</td></tr></table>					</blockquote>							";				html($contenuto, $messaggio);			}			else			{							// ALTRIMENTI HA PSW GIUSTA --------------------------------------------------------------							$messaggio.="<span class='titolo'>Controllo password: superato</span><br>";							// AGGIOIRNO il SESS				$sess[s]=$s;				$sess[time]=$time;				$sess[permessi]=$uten[permessi];				$sess[utente]=$uten[login];				$sess[IDutente]=$uten[IDoggetto];				$dbm = dbmmopen("dati/SESS","w");					dbmmreplace($dbm, $s, serialize($sess));  				dbmmclose($dbm);				$gs=$uten[login];			}		endif;	endif;endif;?>